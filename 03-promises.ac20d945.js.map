{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAcC,SAASC,cAAc,QACrCC,EAAeH,EAAYE,cAAc,wBACzCE,EAAcJ,EAAYE,cAAc,sBACxCG,EAAgBL,EAAYE,cAAc,wBAEhD,SAASI,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZYR,EAAYE,cAAc,yBAgBlCa,iBAAiB,SAAS,SAAAC,GACnCA,EAAEC,iBAIF,IAHA,IAAIC,EAAaC,OAAOhB,EAAaiB,OACjCC,EAAYF,OAAOf,EAAYgB,OAC/BE,EAAgBH,OAAOd,EAAce,OAChCG,EAAI,EAAGA,EAAID,EAAeC,IAAK,CAItCjB,EAFiBiB,EAAI,EADPL,EAAaK,EAAIF,GAI5BG,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formElement = document.querySelector('form');\nconst delayElement = formElement.querySelector('input[ name=\"delay\"]');\nconst stepElement = formElement.querySelector('input[name=\"step\"]');\nconst amountElement = formElement.querySelector('input[name=\"amount\"]');\nconst create_btn = formElement.querySelector('button[type=\"submit\"]');\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\ncreate_btn.addEventListener('click', e => {\n  e.preventDefault();\n  let firstDelay = Number(delayElement.value);\n  let delayStep = Number(stepElement.value);\n  let promiseAmount = Number(amountElement.value);\n  for (let i = 0; i < promiseAmount; i++) {\n    const delay = firstDelay + i * delayStep;\n    const position = i + 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formElement","document","querySelector","$ce04d3a99e08e73b$var$delayElement","$ce04d3a99e08e73b$var$stepElement","$ce04d3a99e08e73b$var$amountElement","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","promiseAmount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ac20d945.js.map"}