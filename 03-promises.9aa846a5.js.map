{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAcC,SAASC,cAAc,QACrCC,EAAeH,EAAYE,cAAc,wBACzCE,EAAcJ,EAAYE,cAAc,sBACxCG,EAAgBL,EAAYE,cAAc,wBAEhD,SAASI,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZMR,EAAYE,cAAc,yBAgBlCa,iBAAiB,SAASC,IACnCA,EAAEC,iBACF,IAAIC,EAAaC,OAAOhB,EAAaiB,OACjCC,EAAYF,OAAOf,EAAYgB,OAC/BE,EAAgBH,OAAOd,EAAce,OACzC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAeC,IAAK,CAItCjB,EAFiBiB,EAAI,EADPL,EAAaK,EAAIF,GAI5BG,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBpB,QAAiBC,MAAU,IAGnDoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoBtB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formElement = document.querySelector('form');\nconst delayElement = formElement.querySelector('input[ name=\"delay\"]');\nconst stepElement = formElement.querySelector('input[name=\"step\"]');\nconst amountElement = formElement.querySelector('input[name=\"amount\"]');\nconst create_btn = formElement.querySelector('button[type=\"submit\"]');\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\ncreate_btn.addEventListener('click', e => {\n  e.preventDefault();\n  let firstDelay = Number(delayElement.value);\n  let delayStep = Number(stepElement.value);\n  let promiseAmount = Number(amountElement.value);\n  for (let i = 0; i < promiseAmount; i++) {\n    const delay = firstDelay + i * delayStep;\n    const position = i + 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formElement","document","querySelector","$47d4ff9957288465$var$delayElement","$47d4ff9957288465$var$stepElement","$47d4ff9957288465$var$amountElement","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","promiseAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.9aa846a5.js.map"}